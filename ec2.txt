#Creating Security Groups

resource "aws_security_group" "security_group" {
  description = "Allow limited inbound external traffic"
  vpc_id      = "${aws_vpc.devops_vpc.id}"
  name        = "terraform_ec2_private_sg"

  ingress = [
    {
    description      = "HTTP"
      from_port        = 8080
      to_port          = 8080
      protocol         = "tcp"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = []
      prefix_list_ids  = []
      security_groups  = []
      self = false
    },
   {
      description      = "HTTPS"
      from_port        = 443
      to_port          = 443
      protocol         = "tcp"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = []
      prefix_list_ids  = []
      security_groups  = []
      self = false
  },
 {
      description      = "SSH"
      from_port        = 22
      to_port          = 22
      protocol         = "tcp"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = []
      prefix_list_ids  = []
      security_groups  = []
      self = false
    }
]
egress = [
    {
      description      = "for all outgoing traffics"
      from_port        = 0
      to_port          = 0
      protocol         = "-1"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = ["::/0"]
      prefix_list_ids = []
      security_groups = []
      self = false
    }
  ]

  tags = {
    Name = "ec2-private-sg"
  }
}

output "aws_security_gr_id" {
  value = "${aws_security_group.security_group.id}"
}

#Creating EC2 in Public Subnet
resource "aws_instance" "public_instance" {
    ami = "ami-03fa4afc89e4a8a09"
    instance_type = "t2.micro"
    vpc_security_group_ids = [ "${aws_security_group.security_group.id}" ]
    subnet_id = "${aws_subnet.public_subnet_id}"
    key_name = "newkey"
    count = 1
    associate_public_ip_address = true
    tags = {
      Name = "public_instance"
    }
}

#Creating EC2 in Private Subnet
resource "aws_instance" "private_instance" {
    ami = "ami-03fa4afc89e4a8a09"
    instance_type = "t2.micro"
    vpc_security_group_ids = [ "${aws_security_group.security_group.id}" ]
    subnet_id = "${aws_subnet.public_subnet_id}"
    key_name = "newkey"
    count = 1
    associate_public_ip_address = false
    tags = {
      Name = "private_instance"
}
}
